import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { trpc } from "../utils/api";
import { useEffect } from "react";
import Router from "next/router";

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AuthShowcase />
    </>
  );
};

export default Home;

// TODO: Change this later
const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  async function redirectIfAuthenticated() {
    if (sessionData?.user) {
      await Router.push("/feed");
    }
  }

  useEffect(() => {
    if (sessionData) {
      Router.push("/feed")
        .then((success) => {
          console.log("Navigated to /feed");
        })
        .catch((error) => {
          console.error(error);
        });
    }
  });

  return (
    <div className="flex flex-col items-center justify-center">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-black no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
